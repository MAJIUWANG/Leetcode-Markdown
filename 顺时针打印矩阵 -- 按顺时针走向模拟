package leetcode;
import java.util.*;
import java.math.*;
import java.io.*;

public class Solution { 
	public static int[] spiralOrder(int[][] matrix) {
		int row = matrix.length;
		if(row == 0) {
			int[] a = new int[0];
			return a;
		}
		int col = matrix[0].length;
		int[] ans = new int[row * col];
		boolean[][] vis = new boolean[row][col];
		int[][] dir = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
		int r = 0, c = 0;
		int index = 0;
		for(int i = 0; i < row * col; i++) {
			ans[i] = matrix[r][c];
			vis[r][c] = true;
			int nextr  = r + dir[index][0], nextc = c + dir[index][1];
			if(nextr < 0 || nextr >= row || nextc < 0 || nextc >= col || vis[nextr][nextc])
				index = (index + 1) % 4;
			r = r + dir[index][0];
			c = c + dir[index][1];
			}
		return ans;
    }
	 
	 public static void main(String[] args){
		int[][] matrix = {{1,2,3}, {4,5,6}, {7,8,9}};
		int[] ans = spiralOrder(matrix);
		for(int i = 0; i < ans.length; i++)
			System.out.println(ans[i]);
	}
}

