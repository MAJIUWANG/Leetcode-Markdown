
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def helper(self, root: TreeNode, value: int) -> int:
        if root == None: return -1
        if root.val > value: return root.val
        l = self.helper(root.left, value)
        r = self.helper(root.right, value)
        if l == -1:
            return r
        if r == -1:
            return l
        return min(l,r)

    def findSecondMinimumValue(self, root: TreeNode) -> int:
        return self.helper(root, root.val)

if __name__ == '__main__':
    so= Solution()
    t1 = TreeNode(2)
    t2 = TreeNode(2)
    t3 = TreeNode(2)
    t1.left = t2
    t1.right = t3
    ans = so.findSecondMinimumValue(t1)
    print(ans)




